version: '3.8'

networks:
  transcendence:

services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Docker/Dockerfile_backend
    ports:
      - 8000:8000
    volumes:
      - .:/app
    depends_on:
      - database
      - redis
    networks:
      - transcendence
    restart: unless-stopped

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - transcendence

  # check exposiong ports
  database:
    container_name: database
    image: postgres
    restart: unless-stopped
    env_file:
      - ../.env
    volumes:
      - ./PostgreSQL/:/var/lib/postgresql/data
    ports:  
      - 5432:5432
    networks:
      - transcendence
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    networks:
      - transcendence
    restart: unless-stopped
    ports:
     - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - transcendence
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./Docker/Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
  
  # check exposiong ports
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - transcendence
    restart: unless-stopped


volumes:
  frontend:
    driver: local
  grafana-storage: {}
  prometheus_data: {}